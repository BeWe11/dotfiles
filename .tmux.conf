# command prefix (like screen)
# unbind-key C-b
# set -g prefix C-o
bind C-o send-prefix
bind o send-prefix

# basic settings
#set-window-option -g mode-keys vi # vi key
#set-option -g status-keys vi
set-window-option -g utf8 on # utf8 support
set-window-option -g mode-mouse off

# scrollback buffer n lines
set -g history-limit 10000

# move tmux copy buffer into x clipboard
bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xclip"

# lockscreen ^X x 
unbind-key ^X
bind ^X lock-server
unbind-key x
bind x lock-server

# screen ^C c 
unbind-key ^C
bind ^C new-window
bind c new-window -c "#{pane_current_path}"

# detach ^D d
unbind-key ^D
bind ^D detach

# displays * 
unbind-key *
bind * list-clients

# next ^@ ^N sp n 
unbind-key ^@
bind ^@ next-window
unbind-key ^N
bind ^N next-window
unbind-key " "
bind " " next-window
unbind-key n
bind n next-window

# title A
unbind-key A
bind A command-prompt "rename-window %%"


# other ^A
unbind-key ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind-key ^H
bind ^H previous-window
unbind-key ^P
bind ^P previous-window
unbind-key p
bind p previous-window
unbind-key BSpace
bind BSpace previous-window

# windows ^W w 
unbind-key ^W
bind ^W list-windows
unbind-key w
bind w list-windows

# quit \ 
unbind-key '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind-key K
bind K confirm-before "kill-window"
unbind-key k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind-key ^L
bind ^L refresh-client
unbind-key l
bind l refresh-client

# More straight forward key bindings for splitting
unbind-key %
bind | split-window -h
bind v split-window -h
unbind-key '"'
bind - split-window -v
bind h split-window -v
bind C-k select-pane -U
bind C-j select-pane -D
bind C-h select-pane -L
bind C-l select-pane -R

# :kB: focus up
unbind-key Tab
bind Tab select-pane -t:.+
unbind-key BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind-key '"'
bind '"' choose-window


# window title
#set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
set-window-option -g automatic-rename on # auto name

# color support
# set -g default-terminal "screen-256color"

# # status bar
# set-option -g status-utf8 on
# set-option -g status-justify left
# set-option -g status-bg white
# set-option -g status-fg black
# set-option -g status-interval 5
# set-option -g status-left-length 30
# set-option -g status-right '#[fg=blue]%m/%d %R #T(#S)#[default]'
# set-option -g status-left ''
# set-option -g visual-activity off
# set-option -g visual-bell off
# set-window-option -g monitor-activity off
# set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-bg black

# clock
set-window-option -g clock-mode-colour white
set-window-option -g clock-mode-style 24

# no delay on esc
set -s escape-time 0

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# easy swapping of panes
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# fix namespace in osx
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
